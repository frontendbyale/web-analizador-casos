---
// src/components/AnalizadorCasos.astro
---
<div class="w-full max-w-6xl mx-auto p-4 md:p-8">
    <header class="flex justify-between items-center mb-6">
        <div>
            <h1 class="text-3xl md:text-4xl font-bold text-slate-800 dark:text-slate-100">Panel de An치lisis de Casos 游늳</h1>
            <p class="mt-2 text-slate-600 dark:text-slate-400">Sube tu archivo CSV y selecciona el per칤odo para obtener un an치lisis completo.</p>
        </div>
        <button id="theme-toggle" type="button" class="text-slate-500 dark:text-slate-400 hover:bg-slate-100 dark:hover:bg-slate-700 focus:outline-none focus:ring-4 focus:ring-slate-200 dark:focus:ring-slate-700 rounded-lg text-sm p-2.5">
            <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
            <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 100 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
        </button>
    </header>

    <div class="bg-white dark:bg-slate-800 p-6 rounded-2xl shadow-lg border border-slate-200 dark:border-slate-700 mb-8">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
            <div class="md:col-span-2">
                <label for="csvFile" class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Archivo CSV</label>
                <input type="file" id="csvFile" accept=".csv" class="block w-full text-sm text-slate-500 dark:text-slate-400 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-indigo-50 dark:file:bg-indigo-900/40 file:text-indigo-700 dark:file:text-indigo-300 hover:file:bg-indigo-100 dark:hover:file:bg-indigo-900/60 cursor-pointer">
            </div>
            <div>
                <label for="monthSelect" class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">Mes</label>
                <select id="monthSelect" class="w-full p-2.5 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition text-slate-900 dark:text-slate-200"></select>
            </div>
            <div>
                <label for="yearInput" class="block text-sm font-medium text-slate-700 dark:text-slate-300 mb-1">A침o</label>
                <input type="number" id="yearInput" placeholder="Ej: 2025" min="2000" max="2100" class="w-full p-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition text-slate-900 dark:text-slate-200">
            </div>
        </div>
        <div class="mt-6">
            <button id="processBtn" class="w-full md:w-auto bg-indigo-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-slate-400 dark:disabled:bg-slate-600 disabled:cursor-not-allowed transition-colors">
                Analizar Per칤odo
            </button>
        </div>
    </div>

    <div id="results" class="space-y-8"></div>
</div>

<script>
    import Papa from 'papaparse';

    // --- L칍GICA PARA EL MODO OSCURO ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    function applyTheme(isDark) {
        const darkIcon = document.getElementById('theme-toggle-dark-icon');
        const lightIcon = document.getElementById('theme-toggle-light-icon');
        if (isDark) {
            document.documentElement.classList.add('dark');
            if (lightIcon) lightIcon.classList.remove('hidden');
            if (darkIcon) darkIcon.classList.add('hidden');
            localStorage.setItem('color-theme', 'dark');
        } else {
            document.documentElement.classList.remove('dark');
            if (lightIcon) lightIcon.classList.add('hidden');
            if (darkIcon) darkIcon.classList.remove('hidden');
            localStorage.setItem('color-theme', 'light');
        }
    }
    const isDarkMode = localStorage.getItem('color-theme') === 'dark' || 
                       (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);
    applyTheme(isDarkMode);
    themeToggleBtn.addEventListener('click', () => applyTheme(!document.documentElement.classList.contains('dark')));

    // --- L칍GICA DEL ANALIZADOR ---
    const processBtn = document.getElementById('processBtn');
    const csvFileInput = document.getElementById('csvFile');
    const monthSelect = document.getElementById('monthSelect');
    const yearInput = document.getElementById('yearInput');
    const resultsDiv = document.getElementById('results');

    function initializeSelectors() {
        const months = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];
        monthSelect.innerHTML = months.map((month, i) => `<option value="${i}">${month}</option>`).join('');
        const now = new Date();
        monthSelect.value = now.getMonth().toString();
        yearInput.value = now.getFullYear().toString();
    }
    initializeSelectors();
    
    processBtn.addEventListener('click', () => {
        const file = csvFileInput.files[0];
        if (!file) { alert("Por favor, selecciona un archivo CSV."); return; }
        const selectedMonth = parseInt(monthSelect.value, 10);
        const selectedYear = parseInt(yearInput.value, 10);
        if (!selectedYear) { alert("Por favor, introduce un a침o v치lido."); return; }

        processBtn.disabled = true;
        processBtn.textContent = "Procesando...";
        resultsDiv.innerHTML = `<div class="text-center text-slate-500 dark:text-slate-400">Analizando datos...</div>`;

        Papa.parse(file, {
            header: true, skipEmptyLines: true,
            complete: (results) => {
                try {
                    const analysis = processData(results.data, selectedMonth, selectedYear);
                    displayResults(analysis, selectedMonth, selectedYear);
                } catch (error) {
                    console.error("Error:", error);
                    resultsDiv.innerHTML = `<p class="text-red-500 font-semibold">Ocurri칩 un error: ${error.message}</p>`;
                } finally {
                    processBtn.disabled = false;
                    processBtn.textContent = "Analizar Per칤odo";
                }
            }
        });
    });

    function processData(data, month, year) {
        const timeBuckets = ['Menos de 24hs', 'Entre 24hs y 48hs', 'Entre 48hs y 72hs', 'M치s de 72hs'];
        const getTimeBucket = (hours) => {
            if (hours <= 24) return timeBuckets[0]; if (hours <= 48) return timeBuckets[1];
            if (hours <= 72) return timeBuckets[2]; return timeBuckets[3];
        };
        const createStatObject = () => Object.fromEntries(timeBuckets.map(bucket => [bucket, 0]));
        let processedData = data.map(row => ({ ...row,
            'Nro de Case': row['Nro. Case'] ? parseInt(row['Nro. Case'].match(/>(\d+)</)?.[1], 10) : null,
            'Fecha de Creacion': row['Fecha Creaci칩n (FFHH)'] ? new Date(row['Fecha Creaci칩n (FFHH)']) : null,
            'Fecha de Cierre': row['Fecha Cierre'] ? new Date(row['Fecha Cierre']) : null,
        })).filter(row => row['Nro de Case']);
        const uniqueCases = Array.from(new Map(processedData.map(item => [item['Nro de Case'], item])).values());
        const filteredCases = uniqueCases.filter(row => {
            const d = row['Fecha de Creacion'];
            return d && d.getFullYear() === year && d.getMonth() === month;
        });
        const closedCases = filteredCases.filter(c => c['Estado Case'] === 'Closed');
        const agents = ['jsotelo', 'cyvarela', 'fortega'];
        const overallAgentActivity = Object.fromEntries(agents.map(agent => [agent, { created: 0, closed: 0 }]));
        filteredCases.forEach(c => {
            if (agents.includes(c['Empleado Creaci칩n'])) overallAgentActivity[c['Empleado Creaci칩n']].created++;
            if (c['Estado Case'] === 'Closed' && agents.includes(c['Empleado Cierre'])) overallAgentActivity[c['Empleado Cierre']].closed++;
        });
        const overallClosureStats = createStatObject();
        closedCases.forEach(c => {
            if (c['Fecha de Cierre'] && c['Fecha de Creacion']) {
                const diffHours = (c['Fecha de Cierre'].getTime() - c['Fecha de Creacion'].getTime()) / 3600000;
                overallClosureStats[getTimeBucket(diffHours)]++;
            }
        });
        const agentPerformance = Object.fromEntries(agents.map(agent => [agent, { totalClosed: 0, overall: createStatObject(), byReason: {} }]));
        closedCases.forEach(c => {
            const closer = c['Empleado Cierre'];
            if (!agents.includes(closer) || !c['Fecha de Cierre'] || !c['Fecha de Creacion']) return;
            const diffHours = (c['Fecha de Cierre'].getTime() - c['Fecha de Creacion'].getTime()) / 3600000;
            const bucket = getTimeBucket(diffHours);
            const reason = c['Raz칩n'] || 'No Especificado';
            agentPerformance[closer].totalClosed++;
            agentPerformance[closer].overall[bucket]++;
            if (!agentPerformance[closer].byReason[reason]) {
                agentPerformance[closer].byReason[reason] = { total: 0, stats: createStatObject() };
            }
            agentPerformance[closer].byReason[reason].total++;
            agentPerformance[closer].byReason[reason].stats[bucket]++;
        });
        const finalCsvData = filteredCases.map(c => ({
            'Modelo Comercial': c['Modelo Comercial'],'Segmento Comercial': c['Segmento Comercial'],'Cliente': c['Cliente'],
            'Nro de Case': c['Nro de Case'],'Estado de Case': c['Estado Case'],'Razon': c['Raz칩n'],'Subrazon': c['Subraz칩n'],
            'Fecha de Creacion': c['Fecha de Creacion'] ? c['Fecha de Creacion'].toISOString().slice(0, 19).replace('T', ' ') : '',
            'Fecha de Cierre': c['Fecha de Cierre'] ? c['Fecha de Cierre'].toISOString().slice(0, 19).replace('T', ' ') : '',
            'Diagnostico': c['Diagn칩stico'],'Solucion': c['Soluci칩n']
        }));

        return { filteredCases, closedCases, overallAgentActivity, overallClosureStats, agentPerformance, finalCsvData };
    }

    function displayResults(analysis, selectedMonth, selectedYear) {
        const { filteredCases, closedCases, overallAgentActivity, overallClosureStats, agentPerformance, finalCsvData } = analysis;
        const monthName = new Date(selectedYear, selectedMonth).toLocaleString('es-ES', { month: 'long' });
        const titleMonth = monthName.charAt(0).toUpperCase() + monthName.slice(1);
        let downloadHTML = '';
        if (finalCsvData.length > 0) {
            downloadHTML = `<div class="mt-8">
                <button id="downloadBtn" class="inline-flex items-center gap-2 bg-green-600 text-white font-bold py-3 px-5 rounded-lg hover:bg-green-700 transition-colors">
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 9.707a1 1 0 011.414 0L9 11.293V3a1 1 0 112 0v8.293l1.293-1.586a1 1 0 111.414 1.414l-3 3.5a1 1 0 01-1.414 0l-3-3.5a1 1 0 010-1.414z" clip-rule="evenodd" /></svg>
                    Descargar CSV Procesado
                </button>
            </div>`;
        }
        resultsDiv.innerHTML = `
            <div class="bg-slate-100 dark:bg-slate-800/50 p-6 rounded-2xl shadow-md border border-slate-200 dark:border-slate-700">
                <h2 class="text-2xl font-bold text-slate-700 dark:text-slate-200 mb-4">Resumen General de ${titleMonth} de ${selectedYear}</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="grid grid-cols-2 gap-4 text-center">
                        <div class="bg-white dark:bg-slate-700/50 p-4 rounded-lg shadow"><div class="text-3xl font-bold text-indigo-600 dark:text-indigo-400">${filteredCases.length}</div><div class="text-sm text-slate-500 dark:text-slate-400">Casos Totales</div></div>
                        <div class="bg-white dark:bg-slate-700/50 p-4 rounded-lg shadow"><div class="text-3xl font-bold text-green-600 dark:text-green-400">${closedCases.length}</div><div class="text-sm text-slate-500 dark:text-slate-400">Casos Cerrados</div></div>
                    </div>
                    <div>
                        <h3 class="font-semibold text-slate-600 dark:text-slate-300 mb-2">Tiempos de Resoluci칩n (General)</h3>
                        <table class="w-full text-sm"><tbody>${Object.entries(overallClosureStats).map(([bucket, count]) => `<tr class="border-b border-slate-200 dark:border-slate-700"><td class="py-1.5 pr-2 text-slate-600 dark:text-slate-400">${bucket}</td><td class="py-1.5 font-mono text-right text-slate-800 dark:text-slate-300">${closedCases.length > 0 ? ((count / closedCases.length) * 100).toFixed(1) : 0}%</td><td class="py-1.5 pl-2 font-mono text-slate-500 dark:text-slate-400 text-right">(${count})</td></tr>`).join('')}</tbody></table>
                    </div>
                </div>
                <div class="mt-6">
                    <h3 class="font-semibold text-slate-600 dark:text-slate-300 mb-2">Actividad General por Agente</h3>
                    <table class="w-full md:w-1/2 text-sm text-left"><thead class="bg-slate-200 dark:bg-slate-700"><tr class="text-slate-600 dark:text-slate-300"><th class="p-2 font-semibold">Agente</th><th class="p-2 font-semibold">Creados</th><th class="p-2 font-semibold">Cerrados</th></tr></thead><tbody>${Object.entries(overallAgentActivity).map(([agent, data]) => `<tr class="border-b border-slate-200 dark:border-slate-700"><td class="p-2 font-medium text-slate-800 dark:text-slate-300">${agent}</td><td class="p-2 font-mono text-slate-800 dark:text-slate-300">${data.created}</td><td class="p-2 font-mono text-slate-800 dark:text-slate-300">${data.closed}</td></tr>`).join('')}</tbody></table>
                </div>
            </div>
            <div>
                <h2 class="text-2xl font-bold text-slate-700 dark:text-slate-200 mt-8 mb-4">Rendimiento Detallado por Agente</h2>
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    ${Object.entries(agentPerformance).filter(([,data])=>data.totalClosed > 0).map(([agent, data]) => `<div class="bg-white dark:bg-slate-800 p-5 rounded-xl shadow-lg border border-slate-200 dark:border-slate-700 space-y-4"><h3 class="text-xl font-bold text-indigo-700 dark:text-indigo-400">${agent}</h3><p class="text-sm text-slate-500 dark:text-slate-400 -mt-2">Total de casos cerrados: <strong>${data.totalClosed}</strong></p><div><h4 class="font-semibold text-slate-600 dark:text-slate-300 mb-2">Rendimiento General del Agente</h4><table class="w-full text-sm"><tbody>${Object.entries(data.overall).map(([bucket, count]) => `<tr class="border-b border-slate-100 dark:border-slate-700"><td class="py-1.5 pr-2 text-slate-600 dark:text-slate-400">${bucket}</td><td class="py-1.5 font-mono text-right text-slate-800 dark:text-slate-300">${((count/data.totalClosed)*100).toFixed(1)}%</td><td class="py-1.5 pl-2 font-mono text-slate-500 dark:text-slate-400 text-right">(${count})</td></tr>`).join('')}</tbody></table></div>${Object.keys(data.byReason).length > 0 ? `<div><h4 class="font-semibold text-slate-600 dark:text-slate-300 mt-4 mb-2">Desglose por Raz칩n</h4><div class="space-y-3 max-h-60 overflow-y-auto pr-2">${Object.entries(data.byReason).map(([reason, reasonData]) => `<div class="bg-slate-50 dark:bg-slate-700/50 p-3 rounded-lg border border-slate-200 dark:border-slate-600"><p class="font-semibold text-indigo-800 dark:text-indigo-300 text-sm">${reason} <span class="font-normal text-slate-500 dark:text-slate-400">(${reasonData.total} cerrados)</span></p><table class="w-full text-xs mt-1"><tbody>${Object.entries(reasonData.stats).filter(([,c])=>c>0).map(([bucket, count]) => `<tr><td class="py-0.5 pr-2 text-slate-500 dark:text-slate-400">${bucket}</td><td class="py-0.5 font-mono text-right text-slate-800 dark:text-slate-300">${((count/reasonData.total)*100).toFixed(0)}%</td></tr>`).join('')}</tbody></table></div>`).join('')}</div></div>` : ''}</div>`).join('') || `<p class="lg:col-span-3 text-center text-slate-500 dark:text-slate-400">Ning칰n agente de la lista cerr칩 casos en este per칤odo.</p>`}
                </div>
            </div>
            ${downloadHTML}
        `;
        
        if (finalCsvData.length > 0) {
            document.getElementById('downloadBtn').addEventListener('click', () => {
                const csvString = Papa.unparse(finalCsvData);
                const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `casos_${monthName}_${selectedYear}_procesados.csv`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
            });
        }
    }
</script>